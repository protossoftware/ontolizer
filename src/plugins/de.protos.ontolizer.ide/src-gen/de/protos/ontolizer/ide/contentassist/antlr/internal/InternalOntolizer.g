/*
 * generated by Xtext 2.9.1
 */
grammar InternalOntolizer;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.protos.ontolizer.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.protos.ontolizer.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.protos.ontolizer.services.OntolizerGrammarAccess;

}
@parser::members {
	private OntolizerGrammarAccess grammarAccess;

	public void setGrammarAccess(OntolizerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeType
entryRuleNodeType
:
{ before(grammarAccess.getNodeTypeRule()); }
	 ruleNodeType
{ after(grammarAccess.getNodeTypeRule()); } 
	 EOF 
;

// Rule NodeType
ruleNodeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeTypeAccess().getGroup()); }
		(rule__NodeType__Group__0)
		{ after(grammarAccess.getNodeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdgeType
entryRuleEdgeType
:
{ before(grammarAccess.getEdgeTypeRule()); }
	 ruleEdgeType
{ after(grammarAccess.getEdgeTypeRule()); } 
	 EOF 
;

// Rule EdgeType
ruleEdgeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeTypeAccess().getGroup()); }
		(rule__EdgeType__Group__0)
		{ after(grammarAccess.getEdgeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdgeList
entryRuleEdgeList
:
{ before(grammarAccess.getEdgeListRule()); }
	 ruleEdgeList
{ after(grammarAccess.getEdgeListRule()); } 
	 EOF 
;

// Rule EdgeList
ruleEdgeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeListAccess().getGroup()); }
		(rule__EdgeList__Group__0)
		{ after(grammarAccess.getEdgeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEdge
entryRuleEdge
:
{ before(grammarAccess.getEdgeRule()); }
	 ruleEdge
{ after(grammarAccess.getEdgeRule()); } 
	 EOF 
;

// Rule Edge
ruleEdge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEdgeAccess().getTargetNodeAssignment()); }
		(rule__Edge__TargetNodeAssignment)
		{ after(grammarAccess.getEdgeAccess().getTargetNodeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleView
entryRuleView
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getViewAccess().getGroup()); }
		(rule__View__Group__0)
		{ after(grammarAccess.getViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDepthRange
entryRuleDepthRange
:
{ before(grammarAccess.getDepthRangeRule()); }
	 ruleDepthRange
{ after(grammarAccess.getDepthRangeRule()); } 
	 EOF 
;

// Rule DepthRange
ruleDepthRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDepthRangeAccess().getGroup()); }
		(rule__DepthRange__Group__0)
		{ after(grammarAccess.getDepthRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNodeTypesAssignment_0()); }
		(rule__Model__NodeTypesAssignment_0)
		{ after(grammarAccess.getModelAccess().getNodeTypesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getEdgeTypesAssignment_1()); }
		(rule__Model__EdgeTypesAssignment_1)
		{ after(grammarAccess.getModelAccess().getEdgeTypesAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getNodesAssignment_2()); }
		(rule__Model__NodesAssignment_2)
		{ after(grammarAccess.getModelAccess().getNodesAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getViewsAssignment_3()); }
		(rule__Model__ViewsAssignment_3)
		{ after(grammarAccess.getModelAccess().getViewsAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__0__Impl
	rule__NodeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getNodeTypeKeyword_0()); }
	'NodeType'
	{ after(grammarAccess.getNodeTypeAccess().getNodeTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__1__Impl
	rule__NodeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getNameAssignment_1()); }
	(rule__NodeType__NameAssignment_1)
	{ after(grammarAccess.getNodeTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__2__Impl
	rule__NodeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getGroup_2()); }
	(rule__NodeType__Group_2__0)?
	{ after(grammarAccess.getNodeTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__3__Impl
	rule__NodeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getGroup_3()); }
	(rule__NodeType__Group_3__0)?
	{ after(grammarAccess.getNodeTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__4__Impl
	rule__NodeType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getGroup_4()); }
	(rule__NodeType__Group_4__0)?
	{ after(grammarAccess.getNodeTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getNodeTypeAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_2__0__Impl
	rule__NodeType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getShapeKeyword_2_0()); }
	'shape'
	{ after(grammarAccess.getNodeTypeAccess().getShapeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getShapeAssignment_2_1()); }
	(rule__NodeType__ShapeAssignment_2_1)
	{ after(grammarAccess.getNodeTypeAccess().getShapeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_3__0__Impl
	rule__NodeType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getColorKeyword_3_0()); }
	'color'
	{ after(grammarAccess.getNodeTypeAccess().getColorKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getColorAssignment_3_1()); }
	(rule__NodeType__ColorAssignment_3_1)
	{ after(grammarAccess.getNodeTypeAccess().getColorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_4__0__Impl
	rule__NodeType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getStyleKeyword_4_0()); }
	'style'
	{ after(grammarAccess.getNodeTypeAccess().getStyleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeTypeAccess().getStyleAssignment_4_1()); }
	(rule__NodeType__StyleAssignment_4_1)
	{ after(grammarAccess.getNodeTypeAccess().getStyleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeType__Group__0__Impl
	rule__EdgeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeTypeAccess().getEdgeTypeKeyword_0()); }
	'EdgeType'
	{ after(grammarAccess.getEdgeTypeAccess().getEdgeTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeType__Group__1__Impl
	rule__EdgeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeTypeAccess().getNameAssignment_1()); }
	(rule__EdgeType__NameAssignment_1)
	{ after(grammarAccess.getEdgeTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeTypeAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getEdgeTypeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeTypeAssignment_0()); }
	(rule__Node__NodeTypeAssignment_0)
	{ after(grammarAccess.getNodeAccess().getNodeTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameAssignment_1()); }
	(rule__Node__NameAssignment_1)
	{ after(grammarAccess.getNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getGroup_2()); }
	(rule__Node__Group_2__0)*
	{ after(grammarAccess.getNodeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEdgeListsAssignment_3()); }
	(rule__Node__EdgeListsAssignment_3)*
	{ after(grammarAccess.getNodeAccess().getEdgeListsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getNodeAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_2__0__Impl
	rule__Node__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getSummaryKeyword_2_0()); }
	'summary'
	{ after(grammarAccess.getNodeAccess().getSummaryKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getSummaryAssignment_2_1()); }
	(rule__Node__SummaryAssignment_2_1)
	{ after(grammarAccess.getNodeAccess().getSummaryAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeList__Group__0__Impl
	rule__EdgeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeListAccess().getEdgeTypeAssignment_0()); }
	(rule__EdgeList__EdgeTypeAssignment_0)
	{ after(grammarAccess.getEdgeListAccess().getEdgeTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeList__Group__1__Impl
	rule__EdgeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeListAccess().getEdgesAssignment_1()); }
	(rule__EdgeList__EdgesAssignment_1)
	{ after(grammarAccess.getEdgeListAccess().getEdgesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeListAccess().getGroup_2()); }
	(rule__EdgeList__Group_2__0)*
	{ after(grammarAccess.getEdgeListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EdgeList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeList__Group_2__0__Impl
	rule__EdgeList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getEdgeListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EdgeList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEdgeListAccess().getEdgesAssignment_2_1()); }
	(rule__EdgeList__EdgesAssignment_2_1)
	{ after(grammarAccess.getEdgeListAccess().getEdgesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__0__Impl
	rule__View__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getViewKeyword_0()); }
	'View'
	{ after(grammarAccess.getViewAccess().getViewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__1__Impl
	rule__View__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNameAssignment_1()); }
	(rule__View__NameAssignment_1)
	{ after(grammarAccess.getViewAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__2__Impl
	rule__View__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_2()); }
	(rule__View__Group_2__0)?
	{ after(grammarAccess.getViewAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__3__Impl
	rule__View__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_3()); }
	(rule__View__Group_3__0)?
	{ after(grammarAccess.getViewAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__4__Impl
	rule__View__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_4()); }
	(rule__View__Group_4__0)?
	{ after(grammarAccess.getViewAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__5__Impl
	rule__View__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_5()); }
	(rule__View__Group_5__0)?
	{ after(grammarAccess.getViewAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getViewAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2__0__Impl
	rule__View__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getEdgeTypesKeyword_2_0()); }
	'edgeTypes'
	{ after(grammarAccess.getViewAccess().getEdgeTypesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2__1__Impl
	rule__View__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getEdgeTypesAssignment_2_1()); }
	(rule__View__EdgeTypesAssignment_2_1)
	{ after(grammarAccess.getViewAccess().getEdgeTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_2_2()); }
	(rule__View__Group_2_2__0)*
	{ after(grammarAccess.getViewAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2_2__0__Impl
	rule__View__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getViewAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getEdgeTypesAssignment_2_2_1()); }
	(rule__View__EdgeTypesAssignment_2_2_1)
	{ after(grammarAccess.getViewAccess().getEdgeTypesAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_3__0__Impl
	rule__View__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNodeTypesKeyword_3_0()); }
	'nodeTypes'
	{ after(grammarAccess.getViewAccess().getNodeTypesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_3__1__Impl
	rule__View__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNodeTypesAssignment_3_1()); }
	(rule__View__NodeTypesAssignment_3_1)
	{ after(grammarAccess.getViewAccess().getNodeTypesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_3_2()); }
	(rule__View__Group_3_2__0)*
	{ after(grammarAccess.getViewAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_3_2__0__Impl
	rule__View__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getViewAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNodeTypesAssignment_3_2_1()); }
	(rule__View__NodeTypesAssignment_3_2_1)
	{ after(grammarAccess.getViewAccess().getNodeTypesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_4__0__Impl
	rule__View__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNodeKeyword_4_0()); }
	'node'
	{ after(grammarAccess.getViewAccess().getNodeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNodeAssignment_4_1()); }
	(rule__View__NodeAssignment_4_1)
	{ after(grammarAccess.getViewAccess().getNodeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_5__0__Impl
	rule__View__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getDepthKeyword_5_0()); }
	'depth'
	{ after(grammarAccess.getViewAccess().getDepthKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getDepthAssignment_5_1()); }
	(rule__View__DepthAssignment_5_1)
	{ after(grammarAccess.getViewAccess().getDepthAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DepthRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DepthRange__Group__0__Impl
	rule__DepthRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthRangeAccess().getStartAssignment_0()); }
	(rule__DepthRange__StartAssignment_0)
	{ after(grammarAccess.getDepthRangeAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DepthRange__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthRangeAccess().getGroup_1()); }
	(rule__DepthRange__Group_1__0)?
	{ after(grammarAccess.getDepthRangeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DepthRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DepthRange__Group_1__0__Impl
	rule__DepthRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthRangeAccess().getFullStopFullStopKeyword_1_0()); }
	'..'
	{ after(grammarAccess.getDepthRangeAccess().getFullStopFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DepthRange__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDepthRangeAccess().getEndAssignment_1_1()); }
	(rule__DepthRange__EndAssignment_1_1)
	{ after(grammarAccess.getDepthRangeAccess().getEndAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NodeTypesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNodeTypesNodeTypeParserRuleCall_0_0()); }
		ruleNodeType
		{ after(grammarAccess.getModelAccess().getNodeTypesNodeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EdgeTypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEdgeTypesEdgeTypeParserRuleCall_1_0()); }
		ruleEdgeType
		{ after(grammarAccess.getModelAccess().getEdgeTypesEdgeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NodesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNodesNodeParserRuleCall_2_0()); }
		ruleNode
		{ after(grammarAccess.getModelAccess().getNodesNodeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ViewsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getViewsViewParserRuleCall_3_0()); }
		ruleView
		{ after(grammarAccess.getModelAccess().getViewsViewParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__ShapeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getShapeSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeTypeAccess().getShapeSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__ColorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getColorSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeTypeAccess().getColorSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__StyleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getStyleSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeTypeAccess().getStyleSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEdgeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeTypeNodeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getNodeAccess().getNodeTypeNodeTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNodeAccess().getNodeTypeNodeTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getNodeAccess().getNodeTypeNodeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__SummaryAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getSummarySTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getSummarySTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__EdgeListsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getEdgeListsEdgeListParserRuleCall_3_0()); }
		ruleEdgeList
		{ after(grammarAccess.getNodeAccess().getEdgeListsEdgeListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__EdgeTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeListAccess().getEdgeTypeEdgeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEdgeListAccess().getEdgeTypeEdgeTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEdgeListAccess().getEdgeTypeEdgeTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEdgeListAccess().getEdgeTypeEdgeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__EdgesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeListAccess().getEdgesEdgeParserRuleCall_1_0()); }
		ruleEdge
		{ after(grammarAccess.getEdgeListAccess().getEdgesEdgeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EdgeList__EdgesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeListAccess().getEdgesEdgeParserRuleCall_2_1_0()); }
		ruleEdge
		{ after(grammarAccess.getEdgeListAccess().getEdgesEdgeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Edge__TargetNodeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEdgeAccess().getTargetNodeNodeCrossReference_0()); }
		(
			{ before(grammarAccess.getEdgeAccess().getTargetNodeNodeIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEdgeAccess().getTargetNodeNodeIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getEdgeAccess().getTargetNodeNodeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__EdgeTypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__EdgeTypesAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeCrossReference_2_2_1_0()); }
		(
			{ before(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeIDTerminalRuleCall_2_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeIDTerminalRuleCall_2_2_1_0_1()); }
		)
		{ after(grammarAccess.getViewAccess().getEdgeTypesEdgeTypeCrossReference_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__NodeTypesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getNodeTypesNodeTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getViewAccess().getNodeTypesNodeTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getViewAccess().getNodeTypesNodeTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getViewAccess().getNodeTypesNodeTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__NodeTypesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getNodeTypesNodeTypeCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getViewAccess().getNodeTypesNodeTypeIDTerminalRuleCall_3_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getViewAccess().getNodeTypesNodeTypeIDTerminalRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getViewAccess().getNodeTypesNodeTypeCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__NodeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getNodeNodeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getViewAccess().getNodeNodeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getViewAccess().getNodeNodeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getViewAccess().getNodeNodeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__DepthAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getDepthDepthRangeParserRuleCall_5_1_0()); }
		ruleDepthRange
		{ after(grammarAccess.getViewAccess().getDepthDepthRangeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDepthRangeAccess().getStartINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDepthRangeAccess().getStartINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DepthRange__EndAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDepthRangeAccess().getEndINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDepthRangeAccess().getEndINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
